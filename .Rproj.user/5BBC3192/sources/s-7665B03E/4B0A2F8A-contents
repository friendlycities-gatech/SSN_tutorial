# Advanced Techniques 

## Network Modularity 

```{r, message=FALSE, eval=TRUE}
library(sf)
library(tidyverse)
library(tmap)
library(readr)
library(igraph)
library(rmapshaper)
library(tigris)
# --- Download Data ----# 
commutes = "https://raw.githubusercontent.com/friendlycities-gatech/Mapping_Networks_R/master/GA_County_Commutes/commutes.csv"
commutes = read.csv(url(commutes))

# commutes = read.csv('/Users/xiaofanliang/Dropbox (GaTech)/GT_Academics/Spatial_Networks/Favor_For_Elon/countygraph.csv')

# --- A function to download county shapefile ---# 
# get_counties <- function() {
#   dir <- tempdir()
#   download.file("https://www2.census.gov/geo/tiger/TIGER2019/COUNTY/tl_2019_us_county.zip", 
#                 destfile = file.path(dir, "tl_2019_us_county.zip"))
#   unzip(file.path(dir, "tl_2019_us_county.zip"), exdir = dir)
#   cnty = st_read(file.path(dir, "tl_2019_us_county.shp"))
#   return(cnty)
# }

# --- Download county data and filter out Georgia state ---# 
# cnty = get_counties() %>% filter(STATEFP == '13') 
# cnty = counties(state='Georgia', resolution='20m', year=2019)

cnty = st_read('US_County_2018/cb_2018_us_county_20m.shp') %>%
  filter(STATEFP == '13') 

edges = commutes %>% filter(DES != ORI) %>%
  mutate(lineID = row_number())

edgelist = edges %>% select(c(ORI, DES, flow))
g = graph_from_data_frame(edgelist, directed=FALSE)

#only works for undirected graph 
clusterlouvain <- cluster_louvain(g)

node = data.frame("COUNTY" = as_ids(V(g)), clusterlouvain$membership)
cnty = cnty %>% left_join(node, by=c('GEOID' = 'COUNTY'), copy=FALSE)

tmap_mode('plot')
tm_shape(ms_simplify(cnty)) + 
  tm_polygons(col='clusterlouvain.membership', 
              labels = c('1', '2', '3', '4'),
              border.col='black',
              title='Louvain Modularity')
```

## Interactive Mode 
### Interactive igraph 
### Interactive tmap 

## Reduce Node Cluttering
### Zoom?  
### Inset Map 

## Reduce Edge Cluttering 
### Edge Bundling - Spatial and Non-Spatial? 
### Edge Arching 
### Best Friend Network  

## Edge Directionality 

## Visualize Nodes with Multiple Attributes

## Visualize Heterogeneity and Friction of Edges Across Boundaries 

## Isochrones 
